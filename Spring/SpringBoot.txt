什么是框架
Spring简介
IOC（配置，注解）
Bean(配置，注解)
AOP（配置，注解，AspectJ, API）

SpringFramework
        Spring Expression Language (SpEL)
        Spring Integration
        Spring Web Flow
        Spring Security
        Spring Data
        Spring Batch

 如何学习Spring
 *掌握用法
 *深入理解
 *不断实践
 *反复总结
 再次深入理解与实践   

Spring是什么
Spring是一个开源框架，为了解决企业应用开发的复杂性而键的，但现在
已经不止于企业应用
是一个一个轻量级的控制反转(IoC)和面向切面(AOP)的容器框架
-从大小与开销两方面而言Spring都是轻量的
-通过控制反转(IoC)的技术达到松耦合的目的
提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑
与系统级服务进行内聚性开发
-包含并管理应用对象的配置和生命周期，这个意义上是一个容器
-将简单的组件配置，组合成为复杂的应用，这个意义上是框架

为什么是Spring
-在Spring上开发应用简单
-在Spring上开发应用方便
-在Spring上开发应用快捷
Spring带来了复杂JavaEE开发的春天

Spring作用
容器
提供了对对多种技术的支持
-JMS
-MQ支持
-UnitTest
-
AOP（事务管理，日志）
提供了众多方便应用的辅助类(JDBC Temolate等)
对主流应用框架(Hibernate等)提供了良好的支持

        适用范围
构建企业应用（SpringMVC+Spring+Hibernate/ibatis）
单独使用Bean容器（Bean管理）
单独使用AOP进行切面处理
其他的Spring功能，如：对消息的支持等
在互联网的应用，

框架：就是制定一套规范或者规则
框架的特点
-半成品
-封装了特定的处理流程和控制逻辑
-成熟的，不断升级改进的软件
    框架与类库的区别
-框架一般是封装了逻辑，高内聚的，类库则是松散的工具组合
-框架专注于某一领域，类库则是更通用

为什么使用框架
软件日趋复杂
重用度高，开发效率和质量提高
软件设计人员要专注对领域的了解，使需求分析更充分
易于上手，快速解决问题

        专题一 IoC
接口及面向接口编程
声明时IoC
Spring的Bean配置
Bean的初始化
Spring的常用注入方式

接口
*用于沟通的中介物的抽象化
*实体把自己提供给外界的抽象化说明，用以由内部操作分离出
外部沟通方式，使其能被修改内部而不影响外界其他实体与其交互的、
方式
*对应Java接口即声明，声明了哪些方法是对外公开提供的
在Java8中，接口可以拥有方法体

    面向接口编程
*结构设计中，分清层次及调用关系，每层只向外（上层）提供一组
功能接口，各层间仅依赖接口而非实现类
*接口实现的变动不影响各层间的调用，这一点在公共服务中尤为
重要
*”面向接口编程“中的”接口“是用于隐藏具体实现和实现多态性的组件
