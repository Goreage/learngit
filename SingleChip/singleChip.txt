	单片机即单片机微型单片机，是将单片机主板(CPU内存和I/O接口)集成在一小块硅片上
的微型机（微控制器）MCU
	计算机组成：中央处理器，存储器和I/O输入输出部分
	三条总线：数据总线，地址总线，控制总线
	一个8位CPU
	片内震荡和定时电路
	128B内部RAM(OOH~7FH);
	4个8位并行I/O口
	2个16位可编程定时/计数器
	一个全双工串行口，
	5个中断源（可编程为优先级）
	22个SFR（除PC外，其余21分散在80~FH之间）
	堆栈深度可达80B（30H~7FH）;
	1GB(128位，20H~2FH)可位寻址区
	
	CPU内部结构
	1.算术逻辑单元ALU(8位)
	+，-，*，/算术运算，与，或，非，异或，逻辑运算
	循环运算，循环移位，位处理
	
	2.寄存器阵列
	（1）工作寄存器R0~R7(8位)
	暂存运算数据和中间结果
	4个工作寄存器区，工作寄存器0区~3区，每个区均含8个寄存器R0~R7;
	用PSW中的两位PSW,4和PSW.3来切换工作寄存区，选用一个工作寄存器区进行读写操作
	
	（2）累加器Acc(8位)
	需要ALU处理的数据和计算结果多数要经过A累加器。
	（3）寄存器B（8位）
	与A 累加配合执行乘除运算。也可用作通用寄存器。
	（4）程序状态字PSW（8位）
	存放ALU运算过程的标志状态
			Cy	AC	PO	RSI		RSO	OV	--	PO()
	(5)数据指针DPTR(16位)
	存放片外存储地址，作为片外存储器的指针可以成两个8位寄存器DPH,DPL使用
	
	(6)堆栈指针SP（8位）
	堆栈是按“先进后出”原则存取数据的存储区，MCS-51堆栈设在片内RAM区
	数据入栈/出栈时，SP自动加1/减1，其内容始终为栈頂地址。
	复位时	SP=07H
	（7）程序计数器PC（16位）
	CPU总是按PC的指示读取程序。PC可自动加1.因此CPU执行程序一般是顺序方式。
	当发生转移，子程序调用，中断和复位等操作，PC被强制改写，程序执行顺序也发生改变
	复位时，PC=0000H
	
	8051存储器结构
	程序存储器空间（外部可扩展程序存储器（ROM））
	内部数据存储区（内部RAM(128B)00H~7FH）
	外部可扩展数据RAM或I/O
	
	关于程序存储器
	在MCS-51的指令系统仅有两条
	MOVC A, @A+DPTR
	MOVC A, @A+PC
	复位后，程序计数器PC的内容为0000H
	MCS-51最多可外扩64k字节程序存储
		各种中断有务子程序的入口地址
	中断源					入口地址
	外部中断0（INTO）		0003H
	定时器0（T0）			000BH
	外部中断1（INTI）  		0013H
	定时器1（T1）			001BH
	串行口（T1 或 R1）		0023H
	
	内部数据存储器
	（1）从00H~1FHde 32B单元是4个工作寄存器组
	（2）地址20H~2FH的1GB共128位 ，是可位寻址的内部RAM区，它们既可以字节寻址，
	亦可以位寻址。
	3）其他80B是只能按字节寻址的内部RAM区，为用户区。
	MCS-51单片机的堆栈安排在内部RAM内，堆栈的深度以不超过内部RAM的空间为
	限。
	
			堆栈
	堆栈是一种只允许在其一端进行数据插入和删除操作的一种数据结构。数据存取为
	“后进先出”。
	堆栈功能：保护断点和现场信息。
	堆栈的建立：MCS-51的堆栈是设置在内部RAM 30H~7FH空间中，栈底为低地址单元
	堆栈指针为SP
	
	特殊功能寄存器SFR
	SFR区部分寄存器功能简介介绍如下：
	程序计数器（PC,16位）：存放将要执行的指令地址。
	累加器（ACC, 8位）：存放数据或中间结果。
	B寄存器（8位）：主要用于乘，除运算。
	数据指针（DPTR, 16位）：存放外部数据存储器的地址。
	
	程序状态字（PSW,8位）：用于寄存程序运行的状态信息，格式如下：
	D7		D6		D5		D4		D3		D2		D1		D0
																
DOH CY		AC		F0		RS1		RSO		OV		/		P		
																	
	进		辅		用		寄		寄		溢		无		奇	
	位		助		户		存		存		出		定		偶	
	标		进		标		器		器		标		义		标	
	志		位		志		组		组		志				志		
	位		标		位		选		选		位				位	
			志				择		择							
			位				位		位				
	
	标志位功能
	CY:(1)	执行算术运算时，最高位向前进位或借位时，CY为1：否则，CY为0
	（2）在位操作中，作“位”累加器。
	
	AC：用于十进制调整。当低四位向高四进位或借位时，AC为1；否则AC为0
	PO:供用户定义的标志位，可以用指令置位或复位，用以控制程序的转向。
	OV:(1)在带符号数的加减运算中，结果产生溢出，OV-1； 否则， OV = 0;
	(2)在乘法运算中，乘积超过255，OV=1,表示积存放在B与A中；否则，OV=0,
	表示积在存放在A中。
	（3）在除法运算中，当除数为0时，OV=1,除法无意义。
	P:累加器A中数的奇偶性，若A中“1”的个数为奇数，则P=1;否则，P=0;
	
	对专用寄存器的两点说明
	（1）单片机的22个专用寄存器中，有21个是可按字节寻址的(PC除外)。这些字节地址
	不连续的分散在内部RAM存储空间高18B中，剩余的空间地址不允许用户使用。
	（2）（特殊寄存器）SFR只能使用直接寻址方式来访问它们，书写时既可使用寄存器名，也可以使用
	寄存器单元地址。
	
		具有位寻址能力专用寄存器
	在21个特殊功能寄存器中，有11个特殊功能寄存器具有位寻址能力，它们的字节地址正好能被8整除
	其十六进制地址的末位，只能是OH或8H
	
		外部数据存储器
		MCS-51外部数据存储器寻址空间为64KB
		MCS-51同外部数据存储器的指令有4条：
		
			MOVX A, @Ri
			MOVX A, @DPTR
			MOVX @Ri, A
			MOVX @DPTR, A
		RO,R1为8位寄存器，寻址范围256B
		DPTR为16位的数据指针，寻址范围64KB
		
		I/O端口
		MCS-51有4个双向的8位并行I/O口：P0~P3
		每一个口都有一个8位的锁存器
		复位后它们的初始化状态为“1”
		
		PO口是三态双向口：（高阻状态）
		既可以作为并行I/O口，也可以作为数据总线口。
		当外部扩展了存储器或I/O端口，则只能作数据总线和地址总线低8位
		
		P1口是专门供用户使用的I/O口，是准双向接口
		P2口是准双向接口，既可以作为并行I/O口，也可作为地址总线高8位口。当外部扩展了
		存储器或I/O端口，则只能作地址总线高8位
		P3口是准双向口，又是双功能口。该口的每一个均可独立地定义为第二功能，
		作为第一功能使用时，口的结构与操作与PI口相同
		
				P3口的第二功能定义
		端口引脚					第二功能
		P3.0						RXD(串行输入口)
		P3.1						TXD(串行输出口)
		P3.2						INT0(外部中断0)
		P3.3						INT1(外部中断1)							
		P3.4						T0(定时器0外部中断)						
		P3.5						T1（定时器1外部中断）						
		P3.6						WR(外部数据存储器写程序)						
		P3.7						RD（外部数据存储器读信号）

		I/O的接口要求与负载能力
		P1, P2, P3口内部均有上拉电阻，当它们用作输入方式时，对应的口锁存器必须”置“1
		P0口内部没有上拉电阻，当它作为通用I/O时，外接上拉电阻，在用作地址/数据线时，不必外加上拉电阻
		PO口的每位输出可驱动8个LSTTL负载，P1-P3口可驱动4个LSTTL负载
		
		复位电路
		复位后PC值为0000H,故复位后程序入口地址为0000H,
		复位后PSW=00H,使片内存储器选择0区工作寄存器，用户标志为P0为0状态：
		复位后SP=07H,设定堆栈栈底为07H
		复位后的P1, P2, P3口锁存器全为1状态，使这些准双向口皆处在输入状态；
		内部RAM不受复位的影响。
		
		复位电路
		复位电路的基本功能是：系统上电时提供复位信号，在加点瞬间，PST端出现一定时间
		的高电平，直至系统电源稳定后，撤销复位信号。
		
		CPU时序
		MCS-51内部有一个用于构成振荡器的高增益反相放大器，引脚XTAL1和XTAL2分别
		是此放大器的输入端和输出端
		
		CPU执行一条指令的时间称为指令周期，它是以机器周期为单位的，MCS-51典型的指令周期
		为一个机器周期。
		每个机器周期由6个状态周期组成，每个状态周期由2个震荡周期组成，状态周期即S1,S2,S3
		S4,S5,S6,而每个状态周期由两个节拍P1, P2组成。
		大多数8051指令执行时间为一个机器周期，MUL(乘法)和DIV(除法)需要4个机器周期。
		
		引脚功能
		1.端口线（4*8=32条）
		1）P0.0-P0.7		2)P1.0-P1.7
		3)P2.0-P2.7			3)P3.0-P3.7
		2.电源线（2条）：VCC为+5V电源线，VSS为地线
		3.控制线（6条）
		ALE/PROC:地址所存允许/编程线
		EA*VPP:允许访问外片外存储器/编程电源线
		PWEN:片外ROM选通线
		RST/VPD:复位/备用电源线
		XTAL1和XTAL2:片内振荡电路输入/输出线
		
		单片机的工作方式 
		复位方式
		程序执行方式
			单步执行方式
			连续执行方式
		节电方式
			待机方式
			掉电保护方式
		EPROM的编程和效验方式
		
		复位方式单片机在开机是都需要复位，以便CPU以及其他功能都处于一个确定的初始状态
		并从这个状态开始工作
		RST引脚是复位信号的输入端
		复位信号是高电平有效，持续时间要有24个时钟周期以上
		若时钟频率为12MHz，则复位脉冲宽度至少应为2us
		单片机复位后，其片内各寄存器，这时，堆栈指针SP为07H,ALE,PSEN,P0,P1,P2,和P3口引脚均为高电平，片为RQM中
		内容不变。
		CHMOS型单片机低功耗工作方式
		待机方式待机方式的进入：使用指令将PCOM寄存器的IDL位置1即可。
		单片机进入待机方式时振荡器仍然运行
		CPU不工作
		通用寄存器都保持原来状态不变
		退出待机方式有两种：中断和硬件复位
		
		编程和效验方式
		编程：是指利用特殊手段对单片机片内EPROM进行写入的过程
		效验：是对刚刚写入的程序代码进行读写验证的过程
		单片机的编程和效验方式只有EPROM型器件才有，如8751这样的器件。
		
		第三章MCS-51指令系统
		指令编码格式及分类
		寻址方式
		数据传送类指令
		算术运算类指令
		逻辑运算类指令
		控制程序转移类指令
		位操作类指令
		
		指令编码格式
		MOV A, R1
		NOP	只浪费时间不操作
		延迟3微妙 NOP NOP NOP
		
		二，指令分类
		按指令功能分为：
		数据传送类指令（29条）：
		算术运算指令（24条）：
		逻辑运算类指令（24条）：
		控制转移类指令（17条）：
		位操作指令（17条）。
		在上述111条指令中，64条指令执行时间为一个机器周期，45条指令执行时间
		为两个机器周期，只有乘除法指令执行时间为四个机器周期，当主频为12MHz时，
		典型指令执行时间为lus.
		
		寻址方式	寻址方式是指存放存储单元地址的表示形式。
			MCS-51指令系统共提供七种寻址方式：
		1.立即寻址
		该方法把操作数（即立即数）包含在指令字节中。
		在指令格式中，在立即数前冠以符号"#"表示立即寻址方式
		
		例如：
		MOV A, #40H:		A -- 40H
		MOV DPTR, #1000H ;	DPTR--1000H
		
		2.直接寻址
		该方式是把操作数的地址包含在指令字节中，而操作数本身存放该地址指示的数
		据存储单元中。
			在指令格式中，操作数的地址直接写在指令中
			例如： MOV A, 40H : A <---(40H)
			MOVC MOVX MOV
			设(40H) = 2BH
3.寄存器寻址方式
	该方式把操作数存放在指定的寄存器中。能实现这种寻址的寄存器有：
R0~R7,A,B,DPTR.
例如：MOV A, #30H ;  A <- #30H  30H直接寻址
A,		寄存器寻址方式
	MOV R0, R7	: R0 <-(R7) R7寄存器寻址
	R0 寄存器寻址
4.寄存器间接寻址方式
	该方式是把操作数的所在地址存放在指定的寄存器中。
	能实现这种寻址方式的寄存器有：
	R0,R1,DPTR
	在指令格式中，在寄存器前面冠以符号“@”表示
	例如： MOV A, @R0;		A <-((R0))
			A--寄存器寻址	@R0--寄存器间接寻址方式		
设：		(R0) = 40H		(40H) = 3FH
执行前：	(R0) = 40H		(40H) = 3FH
执行后：	(R0) = 40H		(40H) = 3FH
			(A) = 3FH	
5.基址加变址寻址方式
	该方式把DPTR或PC寄存器作为基址寄存器，累加器A作为变址寄存器，
(A) + (PC)或(A) + (DPTR)的和作为操作数的16位地址。
	这种寻址方式的指令只有三条：
	MOVC A, @A+DPTR		; A	<-(A + (DPTR))
	MOVC A, @A+PC		; A <-(A + ((A)+(PC)))
	JMP  @A+DPTR		; 跳转至(A) + (DPTR)
	前两条是程序存储器读指令，用MOVC助记符。
6.相对寻址方式
	这种寻址方式是以程序计数器PC的当前值为基准，加上指令中给出的相对
偏移量rel以形成目标地址。
	该寻址方式常用在条件转转指令中，相对偏移量rel给出相对于PC当前值
的跳转范围，其值是一个带符号的8位二进制数，取值范围为-128~127，以补码
形式置于操作码之后存放
7.位寻址方式
	MSC-51具有处理功能，可以对二进制“位”进行操作。
	（1）位寻址的寻址范围
	*内部RAM中的20H~2FH字节地址范围，共128位，位地址为00H~7FH.
	*特殊功能寄存器的可寻址位，可位寻址的特殊功能寄存器有B, ACC,PSN,IP
IE,SCON, TCON, P0~P3,共11个。
	*PSW中的CY作为位累加器。
	(2)位寻址方式
	位寻址方式使用直接寻址方式，有下列四种方式：
	*直接地址方式
	在指令中直接给出位地址	
	*点操作符方式
	在字节地址寄存器名与位序列号之间加一个点
	*位名称方式
	直接给出寄存器的位名称
例如状态寄存器PSW的格式如下：
D7 D6 D5 D5 D4 D3 D2 D1 D0 	<--位地址
CY AC F0 PS1 PS0  OV  /  D0H
  位累加器
若将OV的内容传送到位累加器CY，可用下列指令完成。
MOV C, OD2H		MOV C, PSW2
		位地址			点方法
MOV C, 0D0H2	MOV C, OV
		点操作符方式	位名称
		寻址方式与寻址存储空间
寻址方式		符号表示		寻址存储空间
立即			#data			程序存储器
直接 			direct			程序存储器和SFR
寄存器			寄存器名		R0~R7,A,B,DPTR

寄存器			@R0,@R1			内部RAM OOH~7FH
简介			@DPTR			外部RAM64KB
		
基址加			@A + PC			程序存储器	
变址			@A + DPTR

相对寻址		rel				程序存储器

指令表中符号意义的说明
Rn:		n=0~7,		即R0~R7
Ri:		i=0,1,		即R0,R1	可以加@
direct:		表示直接寻址方式
#data:		8位立即数
#data16:	16位立即数
addr16:		16位地址
addr11:		11位地址
rel:		相对偏移量
bit:		直接寻址位

	3-3数据传送类指令
	格式： MOV 目标， 源：	目标 <--源
	特点：
	（1）指令中有数据源地址和传送数据目标地址，传送方向由源地址中的
数据传送到目的地址中，源地址中的内容不变。
	（2）数据传送类指令的执行结果不影响程序状态寄存器(PSW)中的各标志位。
	数据传送类指令分为以下几种：
	1.内部数据传送指令
	数据传送在单片机内部进行，不通过外部总线，传送速度快。
	指令格式如下：
	MOV A, #data	;	A <-- data OHH~OFFH
	MOV Rn, #data	;	Rn <-- data
	MOV direct, #data;	direct <-- data
	MOV @R, #data	;	(Ri) <---data
	MOV DPTR, #data16; DPTR <-- data16
	MOV A, Rn		;	a <-- (Rn)
	MOV Rn, A		; Rn <-- A
	A 累加器
	MOV A, direct	;	A <--(direct)
	MOV direct, A	;	direct <--(A)
	MOV A, @Ri		;	A <-- ((Ri))
	MOV @Ri, A		;	(Ri) <-- (A)
	MOV Rn, direct	;	Rn <-- (direct)
	MOV direct, Rn	;	direct <-- (Rn)
	MOV @Ri, direct ;	(Ri) <-- (direct)
	MOV direct, @Ri	;	direct <-- ((Ri))
	MOV direct2, direct1 ; direct2 <-- (direct1)

2.累加器与外部RAM之间的数据传送指令
（1）由Ri提供外部RAM的单元地址。格式：
	MOVX A, @Ri		; A <-- ((Ri)),i=0,1 （Ri）低8位
	MOVX @Ri, AC	;(Ri) <-- (A),i=0,1
只能访问外部RAM 00H~FFH256个存储单元。
（2）由DPTR提供外部RAM单元地址。格式：
	MOVX A, @DPTR	; A <-- ((DPTR))
	MOVX @DPTR, A	; (DPTR) <-- (A)
可以访问外部RAM的任意一个存储单元。  
3.程序存储器数据传送转送指令
ROM  Read only memory
	包括内部程序存储器和外部程序存储器。只能读数据传送是单方向的。格式如下：
	MOVC A,@A+DPTR	; A <--((A)+(DPTR))
	MOVC A,@A+PC	; A <--((A)+(PC))
	这两条指令通常用于查找程序中的数据表格
4.堆栈操作指令
	压栈 -- 出栈
	堆栈是建立在内部RAM中，通过堆栈指示器SP进行读写操作。指令格式为：
	PUSH direct		; SP <-- (SP)+1, (SP) <--(direct)
	pop direct		; direct <--((SP)),(SP) <--(SP)-1
5.数据交换指令
	（1）字节交换指令
	格式为：
	XCH A, Rn	;(A) <-- -->(Rn),n=0~7
	XCH A, direcc;(A) <-- -->(direcc)
	XCH A, @Ri	;(A) <-- -->(Ri),i=0,1
	(2)半字节交换指令
	格式为：
		XCHD A,@Ri	;(A3~0) <-- -->((Ri)3~0)
		SWAP A		;(A3~0) <-- -->(A7~4)
	这两条指令通常用于十六进制数或BCD吗数位交换。
3-4算术运算类指令
	该类指令有加，减，乘，除四种，其特点是运算结果影响程序状态寄存器PSW
中的各标志位。
	一，加法类运算指令
		1.加法指令（影响CY, OV ,AC ,P）
		ADD A,#data		;A <--(A)+data
		ADD A,Rn		;A <--(A)+(Rn)
		ADD A,direct		;A <--(A)+(direct)
		ADD A,@Ri		;A <--(A)+(Ri)
		2.带进位CY的加法（影响CY,OV,AC,P）
		 ADDC A,#data	;A <--(A)+data+CY
		 ADDC A,Rn	;A <--(A)+(Rn)+CY
		 ADDC A,direct	;A <--(A)+(direct)+CY
		 ADDC A,@Ri	;A <--(A)+((Ri))+CY
		3.加1指令
		 INC A			;A <--(A)+1(影响)
		 INC Rn			;Rn <--(Rn)+1
		 INC direct		;direct <--(direct)+1(影响)
		 INC @Ri		;(@Ri) <--(@Ri)+1(影响)
	二。减法运算指令
		1.带错位位CY的减法（影响CY, OV, AC, P）
		 SUBB A,#data	;A<--(A) - data - CY
		 SUBB A,Rn		;A<--(A) - (Rn) - CY
		 SUBB A,direct	;A<--(A) - direct - CY
		 SUBB A,@Ri		;A<--(A) - @Ri - CY	
		2.减1指令
		 DEC A			;A<--(A) - 1(影响P)
		 DEC Rn			;Rn<--(Rn) - 1
		 DEC direct		;direct<--(direct) - 1
		 DEC @Ri		;@Ri<--(@Ri) - 1
	三。乘法指令
		1.乘法指令
	NUL AB ; B, A <-- (A) * (B)影响ov , p
	若(B) > 0 则OV = 1; 否则OV = 0.
		2.除法指令
	DIV AB ; A ,B <--(A) / (B),影响OV ,P
		A中存放被除数，B中存放除数，执行之后A中存放商，
	B中存放余数。若除数为0，则OV=1，表示除法无意义。
		四.十进制 DA A

3-5逻辑运算类指令
	一.单操作数逻辑运算指令
	1.累加器清零
	 CLR A		;A <-- 0
	2.累加器取反
	 CPL A 		;A <-- (A^)
	3.累加器循环左移
	 PL A ;
	4.累加器循环右移
	 RR A ;
	5.累加器带进位CY循环左移 
	 RLC A;
	6.累加器带进位CY循环右移
	 RRC A;
	二.双操作逻辑运算指令
	1.逻辑与
	 ANL A,#data	;A <--(A)^data
	 ANL A,Rn		;A <--(A)^(Rn), n=0~7
	 ANL A,direct	;A <--(A)^(direct)
	 ANL A,@Ri		;A <--(A)^(@Ri)
	 ANL direct,A	;direct <--(direct)^A
	 ANL direct,#data	;direct <--(direct)^data
	2.逻辑或
	 ORL A,#data	;A <--(A)Vdata
	 ORL A,Rn		;A <--(A)V(Rn), n=0~7
	 ORL A,direct	;A <--(A)Vd(direct)
	 ORL A,@Ri		;A <--(A)V(Ri), i=0,1
	 ORL direct,A	;direct <--(direct)V(A)
	 ORL direct,#data;direct <--(direct)Vdata
	3.逻辑异或
	 XRL A,#data	;A <--(A)(+)data
	 XRL A,Rn		;A <--(A)(+)(Rn),n=0~7
	 XRL A,direct	;A <--(A)(+)(direct)
	 XRL A,@Ri		;A <--(A)(+)((Ri)),i=0,1
	 XRL direct,A	;direct <--(direct)(+)(A)
	 XRL direct,#data	;direct <--(direct)(+)data
3-6控制转移类指令
共分三种：无条件转移，条件转移和循环转移
1.无条件转移
	（1）长转移指令
		格式：LJMP标号：转移至标号处执行，转移范围为64KB
	（2）短转移指令
		格式：SJMP标号：转移至标号处执行，转移范围为256B
	（3)绝对转移指令
		格式：AJMP标号：转移范围为2KB
	（4）相对转移指令
		格式：JMP标号：转移目标地址为(A) + (DPTR)-=-PC
2.条件转移指令
	（1）累加器判零转移指令
	JZ 标号：若(A) = 0,转至标号执行
	JNZ 标号：若(A) 0,转至标号执行
	（2）比较转移指令
	CJNE A,#data,标号； (A) ->data转至标号执行
	CJNE A,direct,标号； (A) ->direct转至标号执行
	CJNE Rn,#data,标号； (Rn) ->data转至标号执行
	CJNE @Ri,#data,标号； (Ri) ->data转至标号执行
	(3)减“1”不为零转移指令
	DJNZ Rn,标号;Rn <--(Rn) -1,若(Rn)->0转至标号执行
	DJNZ direct,标号;direct <--(Rn) -1,若(Rn)->0转至标号执行
	DJNZ direct,标号;direct <--(direct) -1,若(direct)->0转至标号执行
3.空操作
