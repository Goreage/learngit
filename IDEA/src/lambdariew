一.Lambda表达式简介
什么是Lambda ：Lambda是JAVA8 添加的一个新特性。说白了， Lambda就是一个匿名内部类
为什么要使用Lambda ：使用Lambd表达式可以对一个接口进行非常简洁地实现
Lambda对接口的要求？
虽然可以使用Lambda表达式对某些接口进行简单的实现，但是并不是所有的接口都可以用Lambda表达式来实现，
要求接口中定义的必须要实现的抽象方法只能是一个。
在JAVA8对接口加一个新的特性：default,对接口中修饰


@FunctionalInterface
修饰函数式接口的。接口的抽象方法只有一个

二， Lambda表达式基础语法
三，Lambda表达式的语法精髓
四，Lambda表达式语法进阶之函数引用
五，Lambda表达式的综合实例：排序Comparator
六, Lambda表达式的综合实例：排序forEach()
七, Lambda表达式的综合实例：排序removeIf()
八 Lambda表达式的综合实例：线程的实例化
九， 系统内置函数式接口
十，闭包

面向函数接口编程
在 Java 中，当接口中只有一个抽象方法时，该接口就称为函数式接口。
​
函数式接口，即适用于函数式编程场景的接口。
​
而 Java 中的函数式编程就是 Lambda，即函数式接口就是可以适用于 Lambda 使用的接口。
​
接口中只有一个抽象方法时，Java 中的 Lambda 才能顺利地进行类型的推导。
​
函数式接口都是先使用 Lambda 接口实现方法体，再调用接口中的方法。
