close all ;


clear all ;


clc ;


im = imread('98.jpg');%读入一幅图


[H,W,Z] = size(im); % 获取图像大小，H为垂直方向768点，W为水平方向1024点


I=im2double(im);%将图像类型转换成双精度


res = ones(H,W,Z); % 构造结果矩阵。每个像素点默认初始化为1（白色）


delX = 50; % 平移量X


delY = 100; % 平移量Y


tras = [1 0 delX; 0 1 delY; 0 0 1]; % 平移的变换矩阵


 


for x0 = 1 : H%第1行到第768行


    for y0 = 1 : W%第1列到第1024列


        temp = [x0; y0; 1];%将每一点的位置进行缓存，1行1列，1行2列・・・1行1024列


        temp = tras * temp; % 根据算法进行，矩阵乘法：转换矩阵乘以原像素位置


        x1 = temp(1, 1);%新的像素x1位置，也就是新的行位置（从1~768）


        y1 = temp(2, 1);%新的像素y1位置,也就是新的列位置（从1~1024）


        % 变换后的位置判断是否越界


        if (x1 <= H) & (y1 <= W) & (x1 >= 1) & (y1 >= 1)%新的行位置要小于新的列位置


            res(x1,y1,:)= I(x0,y0,:);%进行图像平移，颜色赋值


        end


    end


end;


 


set(0,'defaultFigurePosition',[100,100,1000,500]);%设置窗口大小


set(0,'defaultFigureColor',[1 1 1]);%设置窗口颜色


figure;%打开一个窗口，用来显示（多幅）图像


subplot(1,2,1), imshow(I),axis on ;%显示图片，一行两列，第一幅

imwrite(I,'save.jpg');  %保存图片
subplot(1,2,2), imshow(res),axis on;%显示图片，一行两列，第二幅
% im=(imread('98.jpg'));
% im1=rgb2gray(im);
% subplot(251)
% imshow(im1);
% title('灰度值化的原图');
% [row,col]=size(im1); %获取行数 和 列数
% %图像的水平错切
% G=zeros(row,col);
% a=pi/6; %水平错切30度
% b=tan(a);
% for m=1:row
% for n=1:col
% G(round(m+b*n),n)=im1(m,n);
% end
% end
% subplot(252);
% imshow(uint8(G));
% title('图片的水平错切');
% %图像的垂直错切
% G=zeros(row,col);
% a=pi/6; %水平错切30度
% b=tan(a);
% for m=1:row
% for n=1:col
% G(n,round(m+b*n))=im1(m,n);
% end
% end
% subplot(253);
% imshow(uint8(G));
% title('图片的垂直错切');
% 
% %I=imread('98.jpg');
% [M,N,r]=size(im);
% imageLevel=I;
% for i=1:M
%     for j=1:N
%         imageLevel(i,j,:)=im(i,N-j+1,:);
%     end
% end
% subplot(254);
% imshow(im);
% title('原图');
% subplot(255);
% imshow(imageLevel);
% title('水平像素处理');
% 
% imageVertical=I;
% for i=1:M
%     for j=1:N
%         imageVertical(i,j,:)=I(M-i+1,j,:);  %进行颜色赋值(,:)
%     end
% end
% subplot(256);
% imshow(imageVertical);
% title('垂直像素处理');